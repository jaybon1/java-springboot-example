spring:
  # thymeleaf:
  #   cache: false
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
    driverClassName: org.h2.Driver
    username: sa
    password:
    # url: jdbc:mariadb://주소넣는곳:3306/temp?characterEncoding=utf-8&serverTimezone=Asia/Seoul
    # driverClassName: org.mariadb.jdbc.Driver
    # username: root
    # password: green123
  h2:
    console:
      enabled: true
      path: /h2
  sql:
    init:
      encoding: UTF-8
      schemaLocations: classpath:h2/schema.sql
      dataLocations: classpath:h2/data.sql
      mode: always
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp
  security:
    # 참고
    # https://velog.io/@rnqhstlr2297/Spring-Security-OAuth2-%EC%86%8C%EC%85%9C%EB%A1%9C%EA%B7%B8%EC%9D%B8
    oauth2:
      client:
        # 스프링 OAuth2-client 라이브러리의 provider 에는 구글,페이스북,트위터가 속해있어 redirect-uri , authorization-grant-type 를 적어주지 않아도 자동으로 고정적으로 등록되어 있다.(적어줘도 된다.) ex) /login/oauth2/facebook, google 로 고정
        # 하지만 네이버나 카카오톡은 Provider 가 아니기 때문에 적어주어야된다. 원하는대로 uri 를 지정할수 있다, 고정되어 있지 않다.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 창을 받을수 있다
            token-uri: https://nid.naver.com/oauth2.0/token #토큰을 받는 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me #프로필 주소를 받는 uri
#            user-name-attribute: response #회원 정보를 json 형태로 받는데 response 라는 키값으로 네이버가 리턴해줌

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

        registration:
          google:
            client-id: 클라이언트_아이디
            client-secret: 클라이언트_시크릿
            scope: # 스코프가 없으면 loadUser를 그냥 넘어가버린다. email만이라도 세팅
              - email
#              - profile
#          naver:
#            client-id: xxx
#            client-secret: xxx
#            scope:
#              - name
#              - email
#            #- profile_image
#            client-name: Naver
#            authorization-grant-type: authorization_code
#            redirect-uri: http://localhost:8070/api/v1/auth/naver #코드를 받는 uri(naver 의 콜백 uri)

          kakao:
            client-id: 클라이언트_아이디
            client-secret: 클라이언트_시크릿
#            scope:
              # - profile_nickname
#              - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: POST #카카오는 필수 파라미터를 POST로 요청해야됌!
            # "{baseScheme}://{baseHost}{basePort}{basePath}/authorized/{registrationId}"
            redirect-uri: http://localhost:8070/login/oauth2/code/kakao #코드를 받는 uri(naver 의 콜백 uri)
server:
  servlet:
    encoding:
      charset: utf-8
      enabled: true
      force: true
  port: 8070

mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*_mapper.xml

# 간단설정은 yml / 상세설정을 하려면 xml
logging:
#  config: classpath:log/logback.xml
  file:
    name: log/todo.log
  level:
    root: info

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    operations-sorter: method


